variables:
  GIT_STRATEGY: clone
  APP_NAME: zeno-habit
  IMAGE_TAG: $CI_COMMIT_SHA

stages:
  - build
  - package
  - test
  - deploy

build web:
  stage: build
  image: node:alpine
  rules:
    - changes:
      - zeno-habit-web/**/*
      when: always
    - when: never
  script:
    - cd zeno-habit-web
    - echo '@mark.davison:registry=https://gitlab.markdavison.kiwi/api/v4/packages/npm/' >> .npmrc
    - npm config set //gitlab.markdavison.kiwi/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}
    - npm ci
    - npm run build
    - npm run test:ci
  artifacts:
      when: always
      reports:
        cobertura:
          - ./zeno-habit-web/coverage/cobertura-coverage.xml
        junit:
          - ./zeno-habit-web/junit.xml

build bff:
  stage: build
  image: node:alpine
  rules:
    - changes:
      - zeno-habit-bff/**/*
      when: always
    - when: never
  script:
    - cd zeno-habit-bff
    - echo '@mark.davison:registry=https://gitlab.markdavison.kiwi/api/v4/packages/npm/' >> .npmrc
    - npm config set //gitlab.markdavison.kiwi/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}
    - npm ci
    - npm run build
    - npm run test:ci
  artifacts:
      when: always
      reports:
        cobertura:
          - ./zeno-habit-bff/coverage/cobertura-coverage.xml
        junit:
          - ./zeno-habit-bff/junit.xml

build api:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:5.0
  rules:
    - changes:
      - zeno-habit-api/**/*
      when: always
    - when: never
  script:
    - cd zeno-habit-api
    - dotnet restore
    - dotnet test --test-adapter-path:. --collect:"XPlat Code Coverage" --results-directory:"artifacts" --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    reports:
      cobertura:
       - ./zeno-habit-api/artifacts/*/coverage.cobertura.xml
      junit:
       - ./**/*test-result.xml

publish web:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build web"
      optional: true
    - job: "build bff"
      optional: true
    - job: "build api"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        IMAGE_TAG: "latest"
    - changes:
      - zeno-habit-web/**/*
      when: always
    - when: never
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./zeno-habit-web/ --dockerfile ./zeno-habit-web/Dockerfile --destination "$CR_USERNAME"/zeno-habit-web:$IMAGE_TAG


publish bff:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:v1.7.0-debug
    entrypoint: [""]
  needs:
    - job: "build web"
      optional: true
    - job: "build bff"
      optional: true
    - job: "build api"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        IMAGE_TAG: "latest"
    - changes:
      - zeno-habit-bff/**/*
      when: always
    - when: never
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --insecure --context ./zeno-habit-bff/ --dockerfile ./zeno-habit-bff/Dockerfile --destination zeno15/zeno-habit-bff:$IMAGE_TAG

publish api:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:v1.7.0-debug
    entrypoint: [""]
  needs:
    - job: "build web"
      optional: true
    - job: "build bff"
      optional: true
    - job: "build api"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        IMAGE_TAG: "latest"
    - changes:
      - zeno-habit-api/**/*
      when: always
    - when: never
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --insecure --context ./zeno-habit-api/ --dockerfile ./zeno-habit-api/Dockerfile --destination zeno15/zeno-habit-api:$IMAGE_TAG

publish e2e:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:v1.7.0-debug
    entrypoint: [""]
  needs:
    - job: "build web"
      optional: true
    - job: "build bff"
      optional: true
    - job: "build api"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        IMAGE_TAG: "latest"
    - changes:
      - zeno-habit-e2e/**/*
      - charts/**/*
      when: always
    - when: never
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --insecure --context ./zeno-habit-e2e/ --dockerfile ./zeno-habit-e2e/Dockerfile --destination zeno15/zeno-habit-e2e:$IMAGE_TAG

end to end tests:
  stage: test
  image:
    name: dtzar/helm-kubectl
    entrypoint: [""]
  needs:
    - job: "publish e2e"
      optional: true
  artifacts:
    expire_in: "1h"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        IMAGE_TAG: "latest"
    - changes:
      - zeno-habit-web/**/*
      - zeno-habit-bff/**/*
      - zeno-habit-api/**/*
      - zeno-habit-e2e/**/*
      - charts/**/*
      when: always
    - when: never
  script:
    - kubectl create namespace ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
    - helm upgrade ${APP_NAME} ./charts --install --atomic --values ./charts/dev-values.yaml --set api.tag="$IMAGE_TAG" --set bff.tag="$IMAGE_TAG" --set web.tag="$IMAGE_TAG" --namespace ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
    - kubectl wait --for=condition=Ready pods --all --namespace ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
    - kubectl apply -f ./zeno-habit-e2e/e2e-dep.yaml -n ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
    - kubectl wait --for=condition=Complete --timeout=600s job/zeno-habit-e2e-job -n ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
    - kubectl logs job/zeno-habit-e2e-job -n ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
  after_script:
    - kubectl delete namespace ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"

deploy to production:
  stage: deploy
  image:
    name: alpine/helm:3.2.1
    entrypoint: [""]
  needs:
    - job: "publish web"
      optional: true
    - job: "publish bff"
      optional: true
    - job: "publish api"
      optional: true
    - job: "publish e2e"
      optional: true
    - job: "end to end tests"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - helm version
    - helm upgrade ${APP_NAME} ./charts --install --atomic --namespace ${APP_NAME} --kubeconfig "$KUBE_CONFIG"
  environment:
    name: "$ENV_NAME"
    url: "$ENV_ADDRESS"